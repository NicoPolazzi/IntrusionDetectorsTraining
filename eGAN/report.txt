TensorFlow 2.0 Upgrade Script
-----------------------------
Converted 9 files
Detected 8 issues that require attention
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
File: Efficient-GAN-Anomaly-Detection/gan/run_adfa.py
--------------------------------------------------------------------------------
Efficient-GAN-Anomaly-Detection/gan/run_adfa.py:164:21: ERROR: Using member tf.contrib.layers.flatten in deprecated module tf.contrib. tf.contrib.layers.flatten cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
Efficient-GAN-Anomaly-Detection/gan/run_adfa.py:174:17: ERROR: Using member tf.contrib.layers.flatten in deprecated module tf.contrib. tf.contrib.layers.flatten cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
Efficient-GAN-Anomaly-Detection/gan/run_adfa.py:275:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
Efficient-GAN-Anomaly-Detection/gan/run_adfa.py:276:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: Efficient-GAN-Anomaly-Detection/gan/run_cicids.py
--------------------------------------------------------------------------------
Efficient-GAN-Anomaly-Detection/gan/run_cicids.py:170:21: ERROR: Using member tf.contrib.layers.flatten in deprecated module tf.contrib. tf.contrib.layers.flatten cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
Efficient-GAN-Anomaly-Detection/gan/run_cicids.py:180:17: ERROR: Using member tf.contrib.layers.flatten in deprecated module tf.contrib. tf.contrib.layers.flatten cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
Efficient-GAN-Anomaly-Detection/gan/run_cicids.py:280:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
Efficient-GAN-Anomaly-Detection/gan/run_cicids.py:281:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
================================================================================
Detailed log follows:

================================================================================
================================================================================
Input tree: 'Efficient-GAN-Anomaly-Detection/'
================================================================================
--------------------------------------------------------------------------------
Processing file 'Efficient-GAN-Anomaly-Detection/main.py'
 outputting to 'Efficient-GAN-Anomaly-Detection2/main.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'Efficient-GAN-Anomaly-Detection/utils/adapt_data.py'
 outputting to 'Efficient-GAN-Anomaly-Detection2/utils/adapt_data.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'Efficient-GAN-Anomaly-Detection/utils/evaluations.py'
 outputting to 'Efficient-GAN-Anomaly-Detection2/utils/evaluations.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'Efficient-GAN-Anomaly-Detection/data/adfa.py'
 outputting to 'Efficient-GAN-Anomaly-Detection2/data/adfa.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'Efficient-GAN-Anomaly-Detection/data/cicids.py'
 outputting to 'Efficient-GAN-Anomaly-Detection2/data/cicids.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'Efficient-GAN-Anomaly-Detection/gan/cicids_utilities.py'
 outputting to 'Efficient-GAN-Anomaly-Detection2/gan/cicids_utilities.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'Efficient-GAN-Anomaly-Detection/gan/run_adfa.py'
 outputting to 'Efficient-GAN-Anomaly-Detection2/gan/run_adfa.py'
--------------------------------------------------------------------------------

164:21: ERROR: Using member tf.contrib.layers.flatten in deprecated module tf.contrib. tf.contrib.layers.flatten cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
174:17: ERROR: Using member tf.contrib.layers.flatten in deprecated module tf.contrib. tf.contrib.layers.flatten cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
275:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
276:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'Efficient-GAN-Anomaly-Detection/gan/adfa_utilities.py'
 outputting to 'Efficient-GAN-Anomaly-Detection2/gan/adfa_utilities.py'
--------------------------------------------------------------------------------

1:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'Efficient-GAN-Anomaly-Detection/gan/run_cicids.py'
 outputting to 'Efficient-GAN-Anomaly-Detection2/gan/run_cicids.py'
--------------------------------------------------------------------------------

170:21: ERROR: Using member tf.contrib.layers.flatten in deprecated module tf.contrib. tf.contrib.layers.flatten cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
180:17: ERROR: Using member tf.contrib.layers.flatten in deprecated module tf.contrib. tf.contrib.layers.flatten cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
280:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
281:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

